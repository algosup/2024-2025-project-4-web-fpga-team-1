<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Main Page</title>

    <link rel="stylesheet" href="/css/global.css" />
    <link rel="stylesheet" href="/css/mainpage.css" />
    <link rel="stylesheet" href="/css/interactivespoints.css" />
</head>
<body>

    {{> header}}

    <div class="content">
        <div class="Title" id="one">
            <h1>FPGA Explorer</h1>
            <h2>The best tool to learn how work FPGA boards<br>thanks simplify virtual modelisations</h2>
            <button onclick="window.location.href='/animation';">Animate your files</button>
        </div>
        <div class="CNES" id="two">
            <div id="text">
                <h1>What is CNES?</h1>
                <p>
                    The Centre National d'Ã‰tudes Spatiales (CNES) is the French space agency responsible for defining and executing France's space policy. 
                    Established in 1961, CNES operates under the supervision of the French government and plays a leading role in Europe's space exploration efforts. 
                    It is one of the world's most influential space agencies, working closely with both national and international partners, 
                    including the European Space Agency (ESA), NASA, and other space organizations. CNES is at the forefront of space innovation, 
                    contributing to scientific research, satellite development, and the future of space exploration.
                </p>
                <hr>
                <h3>Missions and Responsibilities</h3>
                <p>
                    CNES is involved in a wide range of space activities, covering scientific research, Earth observation, telecommunications, navigation, and defense applications. 
                    One of its key missions is to develop and launch satellites for various purposes, including climate monitoring, disaster management, and global connectivity. 
                    CNES is also a major contributor to planetary exploration missions, participating in programs to study Mars, Venus, and other celestial bodies.
                </p>
                <p>
                    Another significant role of CNES is in the development of launch vehicles, particularly through its contributions to the Ariane rocket program in partnership with ESA. 
                    These launch systems are essential for placing satellites into orbit and enabling deep-space exploration. Additionally, CNES plays a crucial role in human spaceflight, 
                    collaborating on international projects such as the International Space Station (ISS) and supporting future lunar and Martian missions.
                </p>
                <hr>
                <h3>Goals and Strategic Vision</h3>
                <p>
                    CNES's overarching goal is to position France as a global leader in space science and technology while fostering innovation that benefits society. 
                    One of its main priorities is advancing Earth observation technologies to monitor climate change, improve weather forecasting, and enhance environmental protection. 
                    The agency also focuses on developing new-generation satellite systems for secure communications, navigation, and defense applications.
                </p>
                <p>
                    In addition to scientific and technological advancements, CNES is committed to international cooperation. 
                    It actively collaborates with space agencies worldwide to pool resources, share knowledge, and contribute to ambitious space missions. 
                    The agency also invests in the future of space exploration by supporting emerging technologies such as artificial intelligence, 
                    autonomous space systems, and reusable launch vehicles.
                </p>
                <hr>
                <h3>Innovation and Technological Advancements</h3>
                <p>
                    CNES plays a crucial role in driving innovation within the space sector. The agency invests heavily in cutting-edge technologies, such as AI-driven satellite systems, 
                    autonomous space operations, and eco-friendly propulsion methods. By collaborating with research institutions and private industry, 
                    CNES supports the development of next-generation space applications, including high-resolution Earth imaging, secure satellite communications, 
                    and advanced deep-space exploration technologies.
                </p>
                <p>
                    Additionally, CNES is a strong advocate for sustainability in space, working on solutions to mitigate space debris and improve the long-term sustainability of space operations. 
                    Through continuous innovation, CNES ensures that France remains at the forefront of global space exploration while developing technologies that benefit both space missions and life on Earth.
                </p>
            </div>
            <img src="/images/satellite.png" alt="CNES logo">
        </div>
        <div class="FPGA" id="one">
            <img src="/images/FPGA.png" alt="Verilog code">
            <div id="text">
                <h1>What is FPGA?</h1>
                <p>
                    A Field-Programmable Gate Array (FPGA) is a type of integrated circuit (IC) that can be programmed and reconfigured after manufacturing. 
                    Unlike traditional processors (CPUs) or application-specific integrated circuits (ASICs), which have fixed functions, 
                    an FPGA allows users to customize its hardware functionality according to specific needs. This flexibility makes FPGAs widely used in high-performance computing, 
                    telecommunications, automotive, aerospace, and industrial applications.
                </p>
                <hr>
                <h3>How Does an FPGA Work?</h3>
                <p>
                    An FPGA consists of a matrix of configurable logic blocks (CLBs) connected through a programmable interconnect. 
                    These blocks can be configured to perform complex logical functions, allowing the FPGA to execute tasks in parallel,
                    offering significant speed and efficiency advantages over conventional processors.
                </p>
                <p>
                    The programming of an FPGA is typically done using hardware description languages (HDLs) such as VHDL or Verilog, which define how the logic gates and interconnections should be configured. 
                    This ability to customize hardware at the circuit level provides superior performance for specialized applications compared to software-based implementations.
                </p>
                <hr>
                <h3>Applications of FPGAs</h3>
                <p>
                    FPGAs are used in a variety of industries where high-speed processing, real-time data handling, and reconfigurability are critical. 
                    Some of the key application areas include:
                </p>
                <ul>
                    <li>Telecommunications: Used in 5G networks, signal processing, and baseband processing due to their ability to handle high-speed data efficiently.</li>
                    <li>Aerospace and Defense: Implemented in radar systems, avionics, satellite communications, and secure encryption due to their reliability and adaptability.</li>
                    <li>Automotive Industry: Integrated into advanced driver-assistance systems (ADAS), autonomous vehicles, and real-time sensor processing for enhanced safety and efficiency.</li>
                    <li>High-Performance Computing (HPC): Used in AI acceleration, deep learning, and cloud computing to speed up computational tasks while reducing power consumption.</li>
                    <li>Industrial Automation: Deployed in robotics, machine vision, and factory automation to enhance real-time control and decision-making.</li>
                </ul>
                <hr>
                <h3>Advantages of FPGAs</h3>
                <p>
                    FPGAs offer several benefits over traditional processing solutions, making them an attractive choice for many high-performance applications:
                </p>
                <ul>
                    <li>Reconfigurability: Can be reprogrammed as needed, allowing hardware updates without changing physical components.</li>
                    <li>Parallel Processing: Executes multiple operations simultaneously, improving speed and efficiency.</li>
                    <li>Low Latency: Performs tasks in real-time with minimal delays, ideal for time-sensitive applications.</li>
                    <li>Power Efficiency: Consumes less power compared to general-purpose processors for certain workloads.</li>
                    <li>Customization: Can be tailored to specific applications, optimizing performance and resource usage.</li>
                </ul>
                <hr>
                <h3>Innovation and Future Trends</h3>
                <p>
                    FPGAs continue to evolve with advancements in AI, machine learning, and cloud computing. Major companies such as Intel, AMD (Xilinx), 
                    and Lattice Semiconductor are pushing the boundaries of FPGA capabilities by integrating them with AI accelerators, high-speed memory, 
                    and cloud-based FPGA solutions. Additionally, emerging trends like adaptive computing, heterogeneous architectures, and FPGA-as-a-Service 
                    (FaaS) are expanding the accessibility and scalability of FPGA-based solutions.
                </p>
                <p>
                    As industries demand faster, more efficient, and flexible computing solutions, 
                    FPGAs remain a key technology for next-generation computing, 
                    networking, and embedded systems.
                </p>
            </div>
        </div>
        <h2 style="text-align: center; background-color: rgb(00, 51, 91); color: white;margin: 0; padding-top: 35px;">The board</h2>
        <div id="infoBoxleft" class="info-box-left"></div>
        <div class="Board" id="two">
            <div class="container">
                <img src="/images/FPGAboard.png" alt="FPGA board" style="margin-bottom: 35px;" class="image">
                <div class="point" data-info="Power Input:  Provides electrical power to the FPGA board." style="top: 23%; left: 550px;"></div>
                <div class="point" data-info="USB Micro-A Port: Used for programming and debugging the FPGA." style="top: 23%; left: 585px;"></div>
                <div class="point" data-info="USB Host Port: Allows the FPGA to connect to external USB devices like keyboards or flash drives." style="top: 23%; left: 640px;"></div>
                <div class="point" data-info="VGA Video Port: Used to connect a graphics card to an analogue computer screen." style="top: 20%; left: 713px;"></div>
                <div class="point" data-info="CPU: The main processing unit that executes instructions and manages operations." style="top: 38%; left: 572px;"></div>
                <div class="point" data-info="Buzzer: Generates sound signals for alerts or notifications." style="top: 38%; left: 798px;"></div>
                <div class="point" data-info="SD Card Port: Provides storage expansion for saving or loading data." style="top: 35%; left: 850px;"></div>
                <div class="point" data-info="RAM: Temporary memory for storing data while the FPGA is running." style="top: 44%; left: 725px;"></div>
                <div class="point" data-info="Clock: Provides timing signals to synchronize operations within the FPGA." style="top: 43%; left: 760px;"></div>
                <div class="point" data-info="7-segment Displays: Used to visually display numerical or character output." style="top: 57%; left: 605px;"></div>
                <div class="point" data-info="LUT (Look-Up Table): A key component in FPGA logic, used to implement combinational logic." style="top: 55%; left: 725px;"></div>
                <div class="point" data-info="Debounced Pushbuttons Switches: Buttons that provide stable input signals by eliminating mechanical bouncing." style="top: 55%; left: 808px;"></div>
                <div class="point" data-info="Toggle Switches: Used to provide manual input for controlling different FPGA functions." style="top: 71%; left: 713px;"></div>
                <div class="point" data-info="Power ON/OFF Switch: Turns the FPGA board on or off." style="top: 70%; left: 864px;"></div>
            </div>
        </div>
        <div id="infoBoxright" class="info-box-right"></div>
        <div class="Verilog" id="one">
            <div id="text">
                <h1>What is Verilog?</h1>
                <p>
                    Verilog is a hardware description language (HDL) used for designing and modeling digital circuits and systems. 
                    It allows engineers to describe the structure and behavior of electronic circuits, particularly for field-programmable gate arrays (FPGAs) 
                    and application-specific integrated circuits (ASICs). Developed in the 1980s and later standardized as IEEE 1364, 
                    Verilog has become one of the most widely used languages in digital design, alongside VHDL.
                </p>
                <hr>
                <h3>Purpose and Applications</h3>
                <p>
                    The primary purpose of Verilog is to enable engineers to design, simulate, and verify digital circuits before they are physically manufactured. 
                    It is commonly used in microprocessor design, signal processing, memory systems, and embedded systems. Verilog allows designers to write register-transfer level 
                    (RTL) code, which defines how data flows between registers under the control of clock signals.
                </p>
                <p>
                    Verilog is also essential for design verification, allowing engineers to test their designs through testbenches and simulations before fabricating the actual hardware. 
                    It supports both behavioral modeling, which describes how a circuit should function, and structural modeling, which specifies how components are interconnected.
                </p>
                <h3>Key Features of Verilog</h3>
                <ul>
                    <li>Concurrent Execution: Unlike traditional programming languages, Verilog executes statements in parallel, mimicking the behavior of real hardware components.</li>
                    <li>Hierarchical Design: Circuits can be designed in a modular fashion using modules, making it easier to manage complex designs.</li>
                    <li>Simulation and Synthesis: Verilog code can be simulated to test functionality before being synthesized into actual hardware.</li>
                    <li>Timing Control: The language provides constructs for handling delays, clocks, and events, allowing designers to model real-time circuit behavior.</li>
                    <li>Testbenches: Engineers can write testbenches to verify circuit functionality using stimulus generation, assertions, and monitoring mechanisms.</li>
                </ul>
                <hr>
                <h3>Advantages of Verilog</h3>
                <ul>
                    <li>Widely Used in Industry: Many semiconductor companies and research institutions rely on Verilog for FPGA and ASIC design.</li>
                    <li>Faster Simulation and Prototyping: Compared to manual circuit design, Verilog enables rapid prototyping, debugging, and testing.</li>
                    <li>Interoperability: Verilog-based designs can be integrated with standard electronic design automation (EDA) tools, making it compatible with various chip fabrication processes.</li>
                    <li>Scalability: From simple logic circuits to complex processors, Verilog can handle designs of varying complexity.</li>
                </ul>
                <hr>
                <h3>Innovation and Future Trends</h3>
                <p>
                    With the growing complexity of modern digital systems, Verilog continues to evolve. Many designers now use SystemVerilog, 
                    an advanced version of Verilog that includes enhancements for verification, object-oriented programming, and formal verification techniques. 
                    Additionally, with the rise of AI-driven chip design and high-performance computing, 
                    Verilog remains an essential tool for developing next-generation processors and embedded systems.
                </p>
                <p>
                    Through its efficiency, flexibility, and widespread industry adoption, Verilog remains a cornerstone of digital circuit design and electronic system development.
                </p>
            </div>
            <img src="/images/Verilog.png" alt="Verilog code">
        </div>
    </div>
    
    {{> footer}}

    <script src="js/mainpage.js"></script>
</body>
</html>